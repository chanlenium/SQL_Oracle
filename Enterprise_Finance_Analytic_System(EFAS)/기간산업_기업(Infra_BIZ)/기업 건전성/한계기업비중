/*****************************************************
 * ������ ��ǥ ���� - �Ѱ��� ���� (p.6, [�׸�5])
 * (����1) �����ٳ⵵ ��������, (����2) 2�� ���� ��������, (����3) 3�� ���� ��������
 * Ȱ�� ���̺� : TCB_NICE_FNST, GIUP_RAW -> MARGINALCORP_TB ����
 *****************************************************/
-- ���� �����Ͱ� ������ table �����ϰ� ���� ����
DROP TABLE IF EXISTS MARGINALCORP_TB;
-- (Step1) MARGICALCORP_TB ���̺� ����(���س��, ���ι�ȣ, ����Ը�, KSIC, ��������(�ս�), �����ڵ�)�� ����
SELECT 
  	t10.*, 
  	t20.EFIS as EFAS
  	INTO MARGINALCORP_TB 
FROM 
  	(
    SELECT DISTINCT 
    	SUBSTR(t1.STD_DT, 1, 6) as STD_YM, 
      	t2.CORP_NO, 
      	t2.COMP_SCL_DIVN_CD, 
      	t2.KSIC, 
      	t1.OPPROFIT 
    FROM 
      	(
        SELECT 
          	t000.COMP_CD, 
          	t000.STD_DT, 
          	t000.OPPROFIT 
        FROM 
          	(
            SELECT 
              	t00.STD_YM, 
              	t00.COMP_CD, 
              	t00.STD_DT, 
              	t00.OPPROFIT, 
              	-- ���� �������ڿ� ��ϵ� �繫��ǥ�� ������ ���س���� �ֱ��� ������ ���
              	ROW_NUMBER() OVER(PARTITION BY t00.COMP_CD, t00.STD_DT ORDER BY t00.STD_YM DESC) as LAST_STD_YM 
            FROM 
              	(
                SELECT DISTINCT 
                	t0.STD_YM, 
                  	t0.COMP_CD, 
                  	t0.STD_DT, 
                  	SUM(t0.OPPROFIT) OVER(PARTITION BY t0.STD_YM, t0.COMP_CD, t0.STD_DT) as OPPROFIT -- ��������
                FROM 
                  	(
                    SELECT 
                      	t.STD_YM, 
                      	t.COMP_CD, 
                      	t.STD_DT, 
                      	DECODE(t.ITEM_CD, '5000', t.AMT, 0) as OPPROFIT -- ��������(�ս�)
                    FROM 
                      	TCB_NICE_FNST t 
                    WHERE 
                      	t.REPORT_CD = '12' 
                      		and t.ITEM_CD = '5000'
                  	) t0 
                WHERE 
                	CAST(t0.STD_DT AS INTEGER)  IN (	 -- �ֱ� 4����
	                	CAST(CONCAT( '${inputYYYY}', '1231') as INTEGER),
	                	CAST(CONCAT( '${inputYYYY}', '1231') as INTEGER) - 10000,
	                	CAST(CONCAT( '${inputYYYY}', '1231') as INTEGER) - 20000,
	                	CAST(CONCAT( '${inputYYYY}', '1231') as INTEGER) - 30000)             	
              	) t00
          	) t000 
        WHERE 
          	t000.LAST_STD_YM = '1'
      	) t1 
      	LEFT JOIN GIUP_RAW t2 
      		ON t1.COMP_CD = t2.COMP_CD 
    ORDER BY 
      	t2.CORP_NO, 
      	SUBSTR(t1.STD_DT, 1, 6)
  	) t10, 
  	KSICTOEFIS66 t20 
WHERE 
  	t10.KSIC = t20.KSIC;
-- ��� ��ȸ
SELECT * FROM MARGINALCORP_TB;


-- (Step2) ���� ���� ����� ���ϰ� �Ѱ� ��� ���ǿ� ���� �Ѱ��� ���� ����
SELECT 
  	t00000.*, 
  	ROUND(t00000.CNT_N1_LOSS / t00000.CNTTOTCORP, 4) as N1_LOSS_RATIO,	-- ���� 1�� ���� �Ѱ� ��� ����
  	ROUND(t00000.CNT_N2_LOSS / t00000.CNTTOTCORP, 4) as N2_LOSS_RATIO,	-- ���� 2�� ���� �Ѱ� ��� ����
  	ROUND(t00000.CNT_N3_LOSS / t00000.CNTTOTCORP, 4) as N3_LOSS_RATIO -- ���� 3�� ���� �Ѱ� ��� ����
FROM 
  	(
    SELECT DISTINCT 
    	t0000.STD_YM, 
    	CASE 
  			WHEN t0000.COMP_SCL_DIVN_CD = 1 THEN t0000.COMP_SCL_DIVN_CD || ' ����'
  			WHEN t0000.COMP_SCL_DIVN_CD = 2 THEN t0000.COMP_SCL_DIVN_CD || ' �߼ұ��'
  			WHEN t0000.COMP_SCL_DIVN_CD = 3 THEN t0000.COMP_SCL_DIVN_CD || ' �߰߱��'
  			ELSE t0000.COMP_SCL_DIVN_CD
  		END as BIZ_SIZE, 
      	-- ���س��, ����Ը� ���� ��ü ��� ��
      	COUNT(t0000.CORP_NO) OVER(PARTITION BY t0000.STD_YM, t0000.COMP_SCL_DIVN_CD) as CNTTOTCORP,	-- (����1 �����ٳ⵵ ��������)�� ���� �Ѱ� ��� �� 
      	SUM(CASE WHEN t0000.CONTLOSSYY >= 1 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.COMP_SCL_DIVN_CD) as CNT_N1_LOSS,	-- (����2 2�� ���� ��������)�� ���� �Ѱ� ��� ��
      	SUM(CASE WHEN t0000.CONTLOSSYY >= 2 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.COMP_SCL_DIVN_CD) as CNT_N2_LOSS,	-- (����3 3�� ���� ��������)�� ���� �Ѱ� ��� ��
      	SUM(CASE WHEN t0000.CONTLOSSYY >= 3 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.COMP_SCL_DIVN_CD) as CNT_N3_LOSS 
    FROM 
      	(
        SELECT 
          	t000.*, 
          	CASE WHEN t000.OPPROFIT < 0 THEN 
          		CASE WHEN t000.N_1_OPPROFIT < 0 THEN 
          			CASE WHEN t000.N_2_OPPROFIT < 0 THEN 3 -- 3�⿬�� ���� 
          				ELSE 2 -- 2�⿬�� ����
          			END ELSE 1 -- �����ٳ⵵ ����
          		END ELSE 0 
          	END as CONTLOSSYY -- ���� ���� ���
        FROM 
          	(
            SELECT DISTINCT 
            	t00.STD_YM, 
              	t00.CORP_NO, 
              	t00.COMP_SCL_DIVN_CD, 
              	t00.EFAS, 
              	t00.OPPROFIT, 
              	t00.N_1_OPPROFIT, 
              	t00.N_2_OPPROFIT 
            FROM 
              	(
                SELECT 
                  	t10.*, 
                  	t20.OPPROFIT as N_2_OPPROFIT -- 3���� ��������(�ս�)
                FROM 
                  	(
                    SELECT 
                      	t1.*, 
                      	t2.OPPROFIT as N_1_OPPROFIT -- 2���� ��������(�ս�)
                    FROM 
                      	MARGINALCORP_TB t1 
                      	LEFT JOIN MARGINALCORP_TB t2 
                      		ON t1.CORP_NO = t2.CORP_NO 
                      		AND TO_NUMBER(t1.STD_YM) -100 = TO_NUMBER(t2.STD_YM)
                  	) t10 
                  	LEFT JOIN MARGINALCORP_TB t20 
                  		ON t10.CORP_NO = t20.CORP_NO 
                  		AND TO_NUMBER(t10.STD_YM) -200 = TO_NUMBER(t20.STD_YM)
              	) t00 -- �ֱ� 3���� ��ȸ
            WHERE 
            	CAST(t00.STD_YM AS INTEGER) IN (	-- �ֱ� 3����
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer),
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer) - 100,
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer) - 200) 
          	) t000
      	) t0000
  	) t00000; 
  
  
  
  
  
/****************************************************************
 * �Ѱ�������(���� 1~3�� ����) : ������ ��Ȳ (p.6, [ǥ])
 * Ȱ�� ���̺� : INTCOVRATIO_TB -> EFAS_INTCOVRATIO_TB ����
 ****************************************************************/
-- ���� �����Ͱ� ������ table �����ϰ� ���� ����
DROP TABLE IF EXISTS EFAS_MARGINALCORP_TB;
-- (Step1) ���̺� ����(EFAS, ���س⵵ ��ü�����, ���س⵵ ���� 1���� ���� ���ڱ����, ���س⵵ ���� 2���� ���� ���ڱ����, ���س⵵ ���� 3���� ���� ���ڱ����, ���⵵ ��ü�����, ���⵵ ���� 1���� ���� ���ڱ����, ���⵵ ���� 2���� ���� ���ڱ����, ���⵵ ���� 3���� ���� ���ڱ����)
SELECT DISTINCT 
	t00000.EFAS, 
  	SUM(DECODE(t00000.STD_YM, CONCAT( '${inputYYYY}', '12'), t00000.CNTTOTCORP, 0)) OVER(PARTITION BY t00000.EFAS) as thisYY_CNTTOTCORP, 
  	SUM(DECODE(t00000.STD_YM, CONCAT( '${inputYYYY}', '12'), t00000.CNT_N1_LOSS, 0)) OVER(PARTITION BY t00000.EFAS) as thisYY_CNT_N1_LOSS, 
  	SUM(DECODE(t00000.STD_YM, CONCAT( '${inputYYYY}', '12'), t00000.CNT_N2_LOSS, 0)) OVER(PARTITION BY t00000.EFAS) as thisYY_CNT_N2_LOSS, 
  	SUM(DECODE(t00000.STD_YM, CONCAT( '${inputYYYY}', '12'), t00000.CNT_N3_LOSS, 0)) OVER(PARTITION BY t00000.EFAS) as thisYY_CNT_N3_LOSS, 
  	SUM(DECODE(t00000.STD_YM, CONCAT(CAST('${inputYYYY}' - 1 as VARCHAR), '12'), t00000.CNTTOTCORP, 0)) OVER(PARTITION BY t00000.EFAS) as prevYY_CNTTOTCORP, 
  	SUM(DECODE(t00000.STD_YM, CONCAT(CAST('${inputYYYY}' - 1 as VARCHAR), '12'), t00000.CNT_N1_LOSS, 0)) OVER(PARTITION BY t00000.EFAS) as prevYY_CNT_N1_LOSS, 
  	SUM(DECODE(t00000.STD_YM, CONCAT(CAST('${inputYYYY}' - 1 as VARCHAR), '12'), t00000.CNT_N2_LOSS, 0)) OVER(PARTITION BY t00000.EFAS) as prevYY_CNT_N2_LOSS, 
  	SUM(DECODE(t00000.STD_YM, CONCAT(CAST('${inputYYYY}' - 1 as VARCHAR), '12'), t00000.CNT_N3_LOSS, 0)) OVER(PARTITION BY t00000.EFAS) as prevYY_CNT_N3_LOSS 
  	INTO EFAS_MARGINALCORP_TB 
FROM 
  	(
    SELECT DISTINCT 
    	t0000.STD_YM, 
      	t0000.EFAS, 
      	COUNT(t0000.CORP_NO) OVER(PARTITION BY t0000.STD_YM, t0000.EFAS) as CNTTOTCORP, 
      	SUM(CASE WHEN t0000.CONTLOSSYY >= 1 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.EFAS) as CNT_N1_LOSS, 
      	SUM(CASE WHEN t0000.CONTLOSSYY >= 2 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.EFAS) as CNT_N2_LOSS, 
      	SUM(CASE WHEN t0000.CONTLOSSYY >= 3 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.EFAS) as CNT_N3_LOSS 
    FROM 
      	(
        SELECT 
          t000.*, 
          CASE WHEN t000.OPPROFIT < 0 THEN 
          	CASE WHEN t000.N_1_OPPROFIT < 0 THEN 
          		CASE WHEN t000.N_2_OPPROFIT < 0 THEN 3 -- 3�⿬�� ���� 
          		ELSE 2 -- 2�⿬�� ����
          	END ELSE 1 -- �����ٳ⵵ ����
          END ELSE 0 END as CONTLOSSYY -- ���� ���� ���
        FROM 
          	(
            SELECT DISTINCT 
            	t00.STD_YM, 
              	t00.CORP_NO, 
             	t00.COMP_SCL_DIVN_CD, 
              	t00.EFAS, 
              	t00.OPPROFIT, -- �����ٳ⵵ ��������(�ս�)
              	t00.N_1_OPPROFIT,	-- 2���� ��������(�ս�)
              	t00.N_2_OPPROFIT -- 3���� ��������(�ս�)
            FROM 
              	(
                SELECT 
                  	t10.*, 
                  	t20.OPPROFIT as N_2_OPPROFIT -- 3���� ��������(�ս�)
                FROM 
                  	(
                    SELECT 
                      	t1.*, 
                      	t2.OPPROFIT as N_1_OPPROFIT -- 2���� ��������(�ս�)
                    FROM 
                      	MARGINALCORP_TB t1 
                      	LEFT JOIN MARGINALCORP_TB t2 
                      		ON t1.CORP_NO = t2.CORP_NO 
                      		AND TO_NUMBER(t1.STD_YM) -100 = TO_NUMBER(t2.STD_YM)
                  	) t10 
                  	LEFT JOIN MARGINALCORP_TB t20 
                  		ON t10.CORP_NO = t20.CORP_NO 
                  		AND TO_NUMBER(t10.STD_YM) -200 = TO_NUMBER(t20.STD_YM)
              	) t00 
            WHERE 
            	CAST(t00.STD_YM AS INTEGER) IN (	-- ���, ���� ����, ������ ����
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer),
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer) - 100,
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer) - 200) 
          	) t000
      	) t0000
  	) t00000;
-- ��� ��ȸ
SELECT * FROM EFAS_MARGINALCORP_TB ORDER BY TO_NUMBER(EFAS, '999999');


-- (Step2) �Ѱ� ����Ͽ� insert
INSERT INTO EFAS_MARGINALCORP_TB 
SELECT 
  	'99',	-- ������ EFIS code '00'�Ҵ� 
 	SUM(t.thisYY_CNTTOTCORP), 
  	SUM(t.thisYY_CNT_N1_LOSS), 
  	SUM(t.thisYY_CNT_N2_LOSS), 
  	SUM(t.thisYY_CNT_N3_LOSS), 
  	SUM(t.prevYY_CNTTOTCORP), 
  	SUM(t.prevYY_CNT_N1_LOSS), 
  	SUM(t.prevYY_CNT_N2_LOSS), 
  	SUM(t.prevYY_CNT_N3_LOSS) 
FROM 
  	EFAS_MARGINALCORP_TB t;
-- ��� ��ȸ
SELECT * FROM EFAS_MARGINALCORP_TB t ORDER BY TO_NUMBER(t.EFAS, '999999');


-- (Step3) ���س�/���� ���� ��ä���� �� ���� ���� ��� ������ ���
SELECT 
  	t.EFAS, 
  	-- �����ٳ⵵ �������� ���� �Ѱ���
  	ROUND(t.thisYY_CNT_N1_LOSS / t.thisYY_CNTTOTCORP, 4) as N1_thisYY_MARGINALRATIO, -- ���س⵵ 
  	ROUND(t.prevYY_CNT_N1_LOSS / t.prevYY_CNTTOTCORP, 4) as N1_prevYY_MARGINALRATIO, -- ���⵿��
  	ROUND(t.thisYY_CNT_N1_LOSS / t.thisYY_CNTTOTCORP - t.prevYY_CNT_N1_LOSS / t.prevYY_CNTTOTCORP, 4) as N1_MARGINALRATIO_INC,	-- ������ 
  	
  	-- 2�⿬�� �������� ���� �Ѱ���
  	ROUND(t.thisYY_CNT_N2_LOSS / t.thisYY_CNTTOTCORP, 4) as N2_thisYY_MARGINALRATIO,	-- ���س⵵ 
  	ROUND(t.prevYY_CNT_N2_LOSS / t.prevYY_CNTTOTCORP, 4) as N2_prevYY_MARGINALRATIO, 	-- ���⵿��
  	ROUND(t.thisYY_CNT_N2_LOSS / t.thisYY_CNTTOTCORP - t.prevYY_CNT_N2_LOSS / t.prevYY_CNTTOTCORP, 4) as N2_MARGINALRATIO_INC, 
  
  	-- 3�⿬�� �������� ���� �Ѱ���
  	ROUND(t.thisYY_CNT_N3_LOSS / t.thisYY_CNTTOTCORP, 4) as N3_thisYY_MARGINALRATIO, -- ���س⵵ 
  	ROUND(t.prevYY_CNT_N3_LOSS / t.prevYY_CNTTOTCORP, 4) as N3_prevYY_MARGINALRATIO, -- ���⵿��
  	ROUND(t.thisYY_CNT_N3_LOSS / t.thisYY_CNTTOTCORP - t.prevYY_CNT_N3_LOSS / t.prevYY_CNTTOTCORP, 4) as N3_MARGINALRATIO_INC 
FROM 
  	EFAS_MARGINALCORP_TB t 
ORDER BY 
  	TO_NUMBER(t.EFAS, '99');
  
  
  
  
  
  
  
  
  
  
/*****************************************************
 * ������ ��ǥ ���� - �Ѱ��� ���� (p.6, [�׸�5])
 * (����4) �����ٳ⵵ ���ں������ 1�̸�, (����5) 2�⿬�� ���ں������ 1�̸�, (����6) 3�⿬�� ���ں������ 1�̸�
 * Ȱ�� ���̺� : TCB_NICE_FNST, GIUP_RAW -> MARGINALCORP_TB ����
 *****************************************************/
-- ���� �����Ͱ� ������ table �����ϰ� ���� ����
DROP TABLE IF EXISTS MARGINALCORP_TB;
-- (Standby) MARGICALCORP_TB ���̺� ����(���س��, ���ι�ȣ, ����Ը�, KSIC, ��������(�ս�), ���ں��, ���ں������, �̾����ڵ�)
SELECT 
  	t10.*, 
  	t20.EFIS as EFAS
  	INTO MARGINALCORP_TB 
FROM 
  	(
    SELECT DISTINCT 
    	SUBSTR(t1.STD_DT, 1, 6) as STD_YM, 
      	t2.CORP_NO, 
     	t2.COMP_SCL_DIVN_CD, 
      	t2.KSIC, 
      	t1.OPPROFIT, 
      	t1.INTEXP, 
      	ROUND(t1.OPPROFIT / DECODE(t1.INTEXP, 0, 1, t1.INTEXP), 2) as INTCOVRATIO 
    FROM 
      	(
        SELECT 
          	t000.COMP_CD, 
          	t000.STD_DT, 
          	t000.INTEXP, 
          	t000.OPPROFIT 
        FROM 
          	(
            SELECT 
              	t00.STD_YM, 
              	t00.COMP_CD, 
              	t00.STD_DT, 
              	t00.INTEXP, 
              	t00.OPPROFIT, 
              	-- ���� �������ڿ� ��ϵ� �繫��ǥ�� ������ ���س���� �ֱ��� ������ ��� 
              	ROW_NUMBER() OVER(PARTITION BY t00.COMP_CD, t00.STD_DT ORDER BY t00.STD_YM DESC) as LAST_STD_YM 
            FROM 
              	(
                SELECT DISTINCT 
                	t0.STD_YM, 
                  	t0.COMP_CD, 
                  	t0.STD_DT, 
                  	SUM(t0.INTEXP) OVER(PARTITION BY t0.STD_YM, t0.COMP_CD, t0.STD_DT) as INTEXP,	-- ���ں��
                  	SUM(t0.OPPROFIT) OVER(PARTITION BY t0.STD_YM, t0.COMP_CD, t0.STD_DT) as OPPROFIT -- ��������
                FROM 
                  	(
                    SELECT 
                      	t.STD_YM, 
                      	t.COMP_CD, 
                      	t.STD_DT, 
                      	DECODE(t.ITEM_CD, '5000', t.AMT, 0) as OPPROFIT,	-- ��������(�ս�)
                      	DECODE(t.ITEM_CD, '6110', t.AMT, 0) as INTEXP	-- ��������(�ս�)
                    FROM 
                      	TCB_NICE_FNST t 
                    WHERE 
                      	t.REPORT_CD = '12' 
                      	AND t.ITEM_CD in ('5000', '6110') -- ��������(5000), ���ں��(6110) 
                      	AND CAST(t.STD_DT AS INTEGER)  IN (	 -- �ֱ� 4����
			                	CAST(CONCAT( '${inputYYYY}', '1231') as INTEGER),
			                	CAST(CONCAT( '${inputYYYY}', '1231') as INTEGER) - 10000,
			                	CAST(CONCAT( '${inputYYYY}', '1231') as INTEGER) - 20000,
			                	CAST(CONCAT( '${inputYYYY}', '1231') as INTEGER) - 30000) 
                  	) t0
              	) t00
          	) t000 
        WHERE 
          	t000.LAST_STD_YM = '1'
      	) t1 
      	LEFT JOIN GIUP_RAW t2 
      		ON t1.COMP_CD = t2.COMP_CD 
  	) t10, 
  	KSICTOEFIS66 t20 
WHERE 
  	t10.KSIC = t20.KSIC;
-- ��� ��ȸ
SELECT * FROM MARGINALCORP_TB; 


-- ���� ���ں������ 1�̸� ����� ���ϰ� �Ѱ� ��� ���ǿ� ���� �Ѱ��� ���� ����
SELECT 
  	t00000.STD_YM, 
  	CASE 
  		WHEN t00000.COMP_SCL_DIVN_CD = 1 THEN t00000.COMP_SCL_DIVN_CD || ' ����'
  		WHEN t00000.COMP_SCL_DIVN_CD = 2 THEN t00000.COMP_SCL_DIVN_CD || ' �߼ұ��'
  		WHEN t00000.COMP_SCL_DIVN_CD = 3 THEN t00000.COMP_SCL_DIVN_CD || ' �߰߱��'
  		ELSE t00000.COMP_SCL_DIVN_CD
  	END as BIZ_SIZE,  
  	ROUND(t00000.CNT_N1_UNDERINTCOV / t00000.CNTTOTCORP, 4) as N1_UNDERINTCOVRATIO, 
  	ROUND(t00000.CNT_N2_UNDERINTCOV / t00000.CNTTOTCORP, 4) as N2_UNDERINTCOVRATIO, 
  	ROUND(t00000.CNT_N3_UNDERINTCOV / t00000.CNTTOTCORP, 4) as N3_UNDERINTCOVRATIO 
FROM 
  	(
    SELECT DISTINCT 
    	t0000.STD_YM, 
      	t0000.COMP_SCL_DIVN_CD, 
      	COUNT(t0000.CORP_NO) OVER(PARTITION BY t0000.STD_YM, t0000.COMP_SCL_DIVN_CD) as CNTTOTCORP, 
      	SUM(CASE WHEN t0000.CONTUNDERINTCOVYY >= 1 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.COMP_SCL_DIVN_CD) as CNT_N1_UNDERINTCOV, 
      	SUM(CASE WHEN t0000.CONTUNDERINTCOVYY >= 2 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.COMP_SCL_DIVN_CD) as CNT_N2_UNDERINTCOV, 
      	SUM(CASE WHEN t0000.CONTUNDERINTCOVYY >= 3 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.COMP_SCL_DIVN_CD) as CNT_N3_UNDERINTCOV 
    FROM 
      	(
        SELECT 
          	t000.*, 
          	CASE WHEN t000.INTCOVRATIO < 1 THEN 
          		CASE WHEN t000.N_1_INTCOVRATIO < 1 THEN 
          			CASE WHEN t000.N_2_INTCOVRATIO < 1 THEN 3 -- 3�⿬�� ���ں������� 1�̸�
          			ELSE 2 -- 2�⿬�� ���ں������� 1�̸�
          		END ELSE 1 -- �����ٳ⵵ ���ں������� 1�̸�
          END ELSE 0 END as CONTUNDERINTCOVYY -- ���� ���ں������� 1�̸� ���
        FROM 
          	(
            SELECT DISTINCT 
            	t00.STD_YM, 
              	t00.CORP_NO, 
              	t00.COMP_SCL_DIVN_CD, 
              	t00.EFAS, 
              	t00.INTCOVRATIO, 
              	t00.N_1_INTCOVRATIO, 
              	t00.N_2_INTCOVRATIO 
            FROM 
              	(
                SELECT 
                  	t10.*, 
                  	t20.INTCOVRATIO as N_2_INTCOVRATIO 
                FROM 
                  	(
                    SELECT 
                      	t1.*, 
                      	t2.INTCOVRATIO as N_1_INTCOVRATIO 
                    FROM 
                      	MARGINALCORP_TB t1 
                      	LEFT JOIN MARGINALCORP_TB t2 
                      		ON t1.CORP_NO = t2.CORP_NO 
                      		AND TO_NUMBER(t1.STD_YM) -100 = TO_NUMBER(t2.STD_YM)
                  	) t10 
                  	LEFT JOIN MARGINALCORP_TB t20 
                  		ON t10.CORP_NO = t20.CORP_NO 
                  		AND TO_NUMBER(t10.STD_YM) -200 = TO_NUMBER(t20.STD_YM)
              	) t00 
            	WHERE 
            		CAST(t00.STD_YM AS INTEGER) IN (	-- ��� �� ���� ����
		    			CAST(CONCAT( '${inputYYYY}', '12') as integer),
		    			CAST(CONCAT( '${inputYYYY}', '12') as integer) - 100)
          	) t000
      	) t0000
  	) t00000;
  
  
  
  
  
/****************************************************************
 * �Ѱ�������(���� 4~6�� ����, ���ں������) : ������ ��Ȳ (p.6, [ǥ])
 * Ȱ�� ���̺� : INTCOVRATIO_TB -> EFAS_INTCOVRATIO_TB ����
 ****************************************************************/
-- ���� �����Ͱ� ������ table �����ϰ� ���� ����
DROP TABLE IF EXISTS EFAS_MARGINALCORP_TB;
-- (Step1) EFAS_MARGINALCORP_TB ���̺� ����
-- EFAS, ���س⵵ ���� ��ü �����, ���س⵵ ���� 1���⿬�� ���ں������<1 ��� ��, ���س⵵ ���� 2���⿬�� ���ں������<1 ��� ��, ���س⵵ ���� 3���⿬�� ���ں������<1 ��� ��
-- ���⵵ ���� ��ü �����, ���⵵ ���� 1���⿬�� ���ں������<1 ��� ��, ���⵵ ���� 2���⿬�� ���ں������<1 ��� ��, ���⵵ ���� 3���⿬�� ���ں������<1 ��� ��
SELECT DISTINCT 
	t00000.EFAS, 
  	SUM(DECODE(t00000.STD_YM, CONCAT( '${inputYYYY}', '12'), t00000.CNTTOTCORP, 0)) OVER(PARTITION BY t00000.EFAS) as thisYY_CNTTOTCORP, 
  	SUM(DECODE(t00000.STD_YM, CONCAT( '${inputYYYY}', '12'), t00000.CNT_N1_UNDERINTCOV, 0)) OVER(PARTITION BY t00000.EFAS) as thisYY_CNT_N1_UNDERINTCOV, 
  	SUM(DECODE(t00000.STD_YM, CONCAT( '${inputYYYY}', '12'), t00000.CNT_N2_UNDERINTCOV, 0)) OVER(PARTITION BY t00000.EFAS) as thisYY_CNT_N2_UNDERINTCOV, 
  	SUM(DECODE(t00000.STD_YM, CONCAT( '${inputYYYY}', '12'), t00000.CNT_N3_UNDERINTCOV, 0)) OVER(PARTITION BY t00000.EFAS) as thisYY_CNT_N3_UNDERINTCOV, 
  	SUM(DECODE(t00000.STD_YM, CONCAT(CAST('${inputYYYY}' - 1 as VARCHAR), '12'), t00000.CNTTOTCORP, 0)) OVER(PARTITION BY t00000.EFAS) as prevYY_CNTTOTCORP, 
  	SUM(DECODE(t00000.STD_YM, CONCAT(CAST('${inputYYYY}' - 1 as VARCHAR), '12'), t00000.CNT_N1_UNDERINTCOV, 0)) OVER(PARTITION BY t00000.EFAS) as prevYY_CNT_N1_UNDERINTCOV, 
 	SUM(DECODE(t00000.STD_YM, CONCAT(CAST('${inputYYYY}' - 1 as VARCHAR), '12'), t00000.CNT_N2_UNDERINTCOV, 0)) OVER(PARTITION BY t00000.EFAS) as prevYY_CNT_N2_UNDERINTCOV, 
  	SUM(DECODE(t00000.STD_YM, CONCAT(CAST('${inputYYYY}' - 1 as VARCHAR), '12'), t00000.CNT_N3_UNDERINTCOV, 0)) OVER(PARTITION BY t00000.EFAS) as prevYY_CNT_N3_UNDERINTCOV  	
  	INTO EFAS_MARGINALCORP_TB 
FROM 
  	(
    SELECT DISTINCT 
    	t0000.STD_YM, 
      	t0000.EFAS, 
      	COUNT(t0000.CORP_NO) OVER(PARTITION BY t0000.STD_YM, t0000.EFAS) as CNTTOTCORP, 
      	SUM(CASE WHEN t0000.CONTUNDERINTCOVYY >= 1 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.EFAS) as CNT_N1_UNDERINTCOV, 
      	SUM(CASE WHEN t0000.CONTUNDERINTCOVYY >= 2 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.EFAS) as CNT_N2_UNDERINTCOV, 
      	SUM(CASE WHEN t0000.CONTUNDERINTCOVYY >= 3 THEN 1 ELSE 0 END) OVER(PARTITION BY t0000.STD_YM, t0000.EFAS) as CNT_N3_UNDERINTCOV 
    FROM 
      	(
        SELECT 
          	t000.*, 
          	CASE WHEN t000.INTCOVRATIO < 1 THEN 
          		CASE WHEN t000.N_1_INTCOVRATIO < 1 THEN 
          			CASE WHEN t000.N_2_INTCOVRATIO < 1 THEN 3 -- 3�⿬�� ���ں������� 1�̸�
          				ELSE 2 -- 2�⿬�� ���ں������� 1�̸�
          			END ELSE 1 -- �����ٳ⵵ ���ں������� 1�̸�
          		END ELSE 0 
          	END as CONTUNDERINTCOVYY -- ���� ���ں������� 1�̸� ���
        FROM 
          	(
            SELECT DISTINCT 
            	t00.STD_YM, 
              	t00.CORP_NO, 
              	t00.COMP_SCL_DIVN_CD, 
              	t00.EFAS, 
              	t00.INTCOVRATIO, 
              	t00.N_1_INTCOVRATIO, 
              	t00.N_2_INTCOVRATIO 
            FROM 
              	(
                SELECT 
                  	t10.*, 
                  	t20.INTCOVRATIO as N_2_INTCOVRATIO 
                FROM 
                  	(
                    SELECT 
                      	t1.*, 
                      	t2.INTCOVRATIO as N_1_INTCOVRATIO 
                    FROM 
                      	MARGINALCORP_TB t1 
                      	LEFT JOIN MARGINALCORP_TB t2 
                      		ON t1.CORP_NO = t2.CORP_NO 
                      		AND TO_NUMBER(t1.STD_YM) -100 = TO_NUMBER(t2.STD_YM)
                  	) t10 
                  	LEFT JOIN MARGINALCORP_TB t20 
                  		ON t10.CORP_NO = t20.CORP_NO 
                  		AND TO_NUMBER(t10.STD_YM) -200 = TO_NUMBER(t20.STD_YM)
              	) t00 
            WHERE 
            	CAST(t00.STD_YM AS INTEGER) IN (	-- ���, ���� ����, ������ ����
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer),
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer) - 100,
	    			CAST(CONCAT( '${inputYYYY}', '12') as integer) - 200)
          	) t000
      	) t0000
  	) t00000;
-- ��� ��ȸ
SELECT * FROM EFAS_MARGINALCORP_TB ORDER BY TO_NUMBER(EFAS, '999999');


-- (Step2) �Ѱ� ����Ͽ� insert
INSERT INTO EFAS_MARGINALCORP_TB 
SELECT 
  	'99',	-- ������ EFIS code '00'�Ҵ� 
  	SUM(t.thisYY_CNTTOTCORP), 
  	SUM(t.thisYY_CNT_N1_UNDERINTCOV), 
  	SUM(t.thisYY_CNT_N2_UNDERINTCOV), 
  	SUM(t.thisYY_CNT_N3_UNDERINTCOV), 
  	SUM(t.prevYY_CNTTOTCORP), 
  	SUM(t.prevYY_CNT_N1_UNDERINTCOV), 
  	SUM(t.prevYY_CNT_N2_UNDERINTCOV), 
  	SUM(t.prevYY_CNT_N3_UNDERINTCOV) 
FROM 
  	EFAS_MARGINALCORP_TB t;
-- ��� ��ȸ
SELECT * FROM EFAS_MARGINALCORP_TB t ORDER BY TO_NUMBER(t.EFAS, '999999');


-- (Step3) ���س�/���� ���� ��ä���� �� ���� ���� ��� ������ ���
SELECT 
  	t.EFAS, 
  	-- �����ٳ⵵ �������� ���� �Ѱ���
  	ROUND(t.thisYY_CNT_N1_UNDERINTCOV / t.thisYY_CNTTOTCORP, 4) as N1_thisYY_MARGINALRATIO,	-- ���س⵵ 
  	ROUND(t.prevYY_CNT_N1_UNDERINTCOV / t.prevYY_CNTTOTCORP, 4) as N1_prevYY_MARGINALRATIO, -- ���⵿��
  	ROUND(t.thisYY_CNT_N1_UNDERINTCOV / t.thisYY_CNTTOTCORP - t.prevYY_CNT_N1_UNDERINTCOV / t.prevYY_CNTTOTCORP, 4) as N1_MARGINALRATIO_INC, 
  
  	-- 2�⿬�� �������� ���� �Ѱ���
  	ROUND(t.thisYY_CNT_N2_UNDERINTCOV / t.thisYY_CNTTOTCORP, 4) as N2_thisYY_MARGINALRATIO,	-- ���س⵵ 
  	ROUND(t.prevYY_CNT_N2_UNDERINTCOV / t.prevYY_CNTTOTCORP, 4) as N2_prevYY_MARGINALRATIO, -- ���⵿��
  	ROUND(t.thisYY_CNT_N2_UNDERINTCOV / t.thisYY_CNTTOTCORP - t.prevYY_CNT_N2_UNDERINTCOV / t.prevYY_CNTTOTCORP, 4) as N2_MARGINALRATIO_INC, 
  
  	-- 3�⿬�� �������� ���� �Ѱ���
  	ROUND(t.thisYY_CNT_N3_UNDERINTCOV / t.thisYY_CNTTOTCORP, 4) as N3_thisYY_MARGINALRATIO, -- ���س⵵ 
  	ROUND(t.prevYY_CNT_N3_UNDERINTCOV / t.prevYY_CNTTOTCORP, 4) as N3_prevYY_MARGINALRATIO, -- ���⵿��
  	ROUND(t.thisYY_CNT_N3_UNDERINTCOV / t.thisYY_CNTTOTCORP - t.prevYY_CNT_N3_UNDERINTCOV / t.prevYY_CNTTOTCORP, 4) as N3_MARGINALRATIO_INC 
FROM 
  	EFAS_MARGINALCORP_TB t 
ORDER BY 
  	TO_NUMBER(t.EFAS, '99');
